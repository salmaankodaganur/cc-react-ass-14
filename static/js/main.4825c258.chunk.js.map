{"version":3,"sources":["mycomponent/List.js","mycomponent/Search.js","App.js","Hooks/useSemiPersistenceState.js","reportWebVitals.js","index.js"],"names":["List","memo","item","deleted","console","log","map","name","href","url","title","author","num_comments","points","id","onClick","current","prev","search","onSearch","searchTerm","htmlFor","value","type","onChange","API_ENDPOINT","itenReducer","state","action","isLoading","isError","data","payload","filter","i","objectID","Error","App","key","initValue","firstRender","useRef","useState","localStorage","getItem","persistenceKey","setpersistenceKey","useEffect","setItem","useSemiPersistenceState","setSearchTerm","useReducer","iten","dispatchIten","setUrl","isDarkTheme","setIsDarkTheme","handleSetItem","useCallback","a","axios","get","response","hits","onHandleDelete","document","documentElement","setAttribute","className","onSubmit","e","preventDefault","target","disabled","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4825c258.chunk.js","sourcesContent":["\r\nimport { memo } from 'react';\r\nimport './listStyle.css'\r\nconst List = memo(({item,deleted})=> {\r\n    console.log(\"2 bull\");\r\n    return (\r\n        <div>\r\n             <div>\r\n            <ol>\r\n                {item.map(function(name){\r\n                return(\r\n                    <li>\r\n                    <span>\r\n                    <a href = {name.url}>{name.title}</a>\r\n                    </span>\r\n                    <span>{name.author}</span>\r\n                    <span>{name.num_comments}</span>\r\n                    <span>{name.points}</span>\r\n                    <span><button id=\"hey\" onClick={()=> deleted(name)}>delete</button></span>\r\n                    </li>\r\n                );\r\n           })}\r\n            </ol>\r\n            \r\n        </div>\r\n        </div>\r\n    );\r\n},(current,prev) => true);\r\n\r\nexport default List;","import React from 'react'\r\n\r\n\r\nexport default function search({onSearch,searchTerm}) {\r\n    return (\r\n        <div>\r\n            <label htmlFor=\"search\">SEARCH FOR STORIES:</label>\r\n            <input  value = {searchTerm} type=\"text\" id=\"search\" onChange={onSearch}/>\r\n            \r\n        </div>\r\n    )\r\n}","import './App.css';\nimport List from './mycomponent/List'\nimport Search from './mycomponent/Search'\nimport useSemiPersistenceState from './Hooks/useSemiPersistenceState';\nimport {useEffect,useReducer,useCallback,useState} from 'react';\nimport axios from 'axios';\n\nconst API_ENDPOINT=\"https://hn.algolia.com/api/v1/search?query=\";\n\n\nconst itenReducer=(state,action)=>{\n switch(action.type){\n   case\"STORIES_FETCH_INIT\":\n   return{...state,isLoading:true,isError:false};\n   case\"STORIES_FETCH_SUCESS\":\n   return{...state,data:action.payload,isLoading:false,isError:false};\n   case\"STORIES_FETCH_FAILURE\":\n   return{...state,data:[],isLoading:false,isError:true};\n   case\"STORIES_REMOVE\":\n   return{...state,data:state.data.filter((i)=>action.payload.objectID!== i.objectID),}\n   default:\n     throw new Error();\n }\n};\n\n\nfunction App() {\n  console.log(\"1 bull\")\n  const[searchTerm,setSearchTerm] = useSemiPersistenceState(\"customSearchTerm\",\"\");\n  const[iten,dispatchIten]=useReducer(itenReducer,{\n    data:[],\n    isLoading:false,\n    isError:false,\n    });\n  \n  const[url,setUrl]=useState(`${API_ENDPOINT}${searchTerm}`);\n  const[isDarkTheme,setIsDarkTheme]=useState(localStorage.getItem(\"theme\"));\n  localStorage.setItem(\"theme\",setIsDarkTheme)\n  const handleSetItem=useCallback(async ()=>{\n    dispatchIten({type:\"STORIES_FETCH_INIT\"});\n    try{ const response = await axios.get(url);\n      dispatchIten({type:\"STORIES_FETCH_SUCESS\",payload:response.data.hits});\n    }catch{\n      dispatchIten({data:\"STORIES_FETCH_FAILURE\"})\n    }\n   \n    },[url]);  \n  \n  useEffect(() => {\n    handleSetItem();\n  }, [handleSetItem]);\n\n  const handleSearchSubmit = (e) =>{\n    e.preventDefault();\n    setUrl(`${API_ENDPOINT}${searchTerm}`)\n  }\n  const handleOnSearch = (e) =>{\n    setSearchTerm(e.target.value);  \n  };\n  const onHandleDelete = useCallback((name)=>{\n    dispatchIten({type:\"STORIES_REMOVE\",payload:name});\n  },[]);\n  useEffect(()=>{\n   document.documentElement.setAttribute(\"data-theme\",isDarkTheme ? \"dark\":\"light\");\n  },[isDarkTheme])\n  \n  return (\n    <div className=\"container\">\n      <div className=\"card\">\n      <button onClick={()=>setIsDarkTheme((prev)=>!prev)}>(D/W)THEME</button>\n      <form onSubmit={handleSearchSubmit}>\n      <Search  searchTerm = {searchTerm} onSearch={handleOnSearch}/>\n       <button disabled={!searchTerm} type=\"submit\" >submit</button>\n       </form>\n       <h3>SEARCHING FOR:{searchTerm}</h3>\n       {iten.isLoading ?(<p>loading...</p>):(<List item={iten.data} deleted={onHandleDelete}/>)}\n       {iten.isError && <p>something went wrong...</p>}\n       </div>\n      </div>\n  );\n}\n\nexport default App;\n","import { useEffect, useState ,useRef} from 'react'\r\n\r\nexport default function useSemiPersistenceState(key,initValue) {\r\n    const firstRender = useRef(false);\r\n const[persistenceKey,setpersistenceKey] = useState(localStorage.getItem(key)||initValue);\r\n useEffect(()=>{\r\n     if(!firstRender.current){\r\n         firstRender.current = true;\r\n         return;\r\n     }else{\r\n         console.log(\"hey i am sal\");\r\n     localStorage.setItem(key,persistenceKey)\r\n     }\r\n },[key,persistenceKey])\r\n return [persistenceKey,setpersistenceKey]\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}